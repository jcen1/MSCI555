# -*- coding: utf-8 -*-
# http://www.gurobi.com/resources/seminars-and-videos/modeling-with-the-gurobi-python-interface

from gurobipy import *
import pandas as pd
import numpy as np
import mysql.connector
from sqlalchemy import create_engine
import pymysql
import csv
import os
#-----------------------------input-------------------------
dirname = os.path.dirname(__file__) +'/'  
s= 'weights'
data = pd.read_csv("{}.csv".format(dirname+s))
jobs = data.iloc[:,0:1]
OutputSQLdf = data.iloc[:,:]


data = data.iloc[:,1:]
print(data)
print(data.iloc[0,1]) #rows columns


#show = data.iloc[:,0]
show = data.shape[0]
print(show)
interval = data.shape[1]
#interval =7
try:
# Create a new model (m is the variable)
    m = Model("Personal_Music_Festival")
    vars_tup = [(i, j) for i in range(show) for j in range(interval)]
    x = m.addVars(vars_tup, lb=+0, vtype=GRB.BINARY, name="show_attended")
    b = m.addVars(interval, lb=+0, vtype=GRB.BINARY, name="break_taken")
    m.update()

    m.setObjective( -quicksum(x[i,j] * data.iloc[i,j] for i in range(show) for j in range(interval)))
    
    for j in range(interval):
        m.addConstr(quicksum(x[i,j] for i in range(show)) + b[j] == 1, "c1")
    m.addConstr(quicksum(b[j] for j in range(interval)) >= 1, "c2" )

    m.optimize()
    print('Sum of Weight:', -m.objVal)
    for v in m.getVars():
        print(v.varName, v.x)

    getOutputList = m.getVars()
    OutputList = []
    
    for i in range(len(getOutputList)):
        OutputList.append(str(getOutputList[i]))
    
    # Get rid of excess texts generated by Gurobi    
    OutputList = [w.replace('gurobi.Var show_attended[','') for w in OutputList]
    OutputList = [w.replace('gurobi.Var break_taken[','') for w in OutputList]
    OutputList = [w.replace(']','') for w in OutputList]
    OutputList = [w.replace(' (value ',',') for w in OutputList]
    OutputList = [w.replace('<','') for w in OutputList]
    OutputList = [w.replace('>','') for w in OutputList]
    OutputList = [w.replace('-','') for w in OutputList]
    OutputList = [w.replace('.0','') for w in OutputList]
    OutputList = [w.replace(')','') for w in OutputList]

    OutputSQLdf
    
    outputnp=np.zeros([show, interval])

    for i in range(0,len(OutputList)-interval):
            outputnp[int(OutputList[i].split(',')[0]),int(OutputList[i].split(',')[1])] =OutputList[i].split(',')[2]
    print (outputnp)
    
    outputbreak = np.zeros([1,interval])

    for i in range(len(OutputList)-interval,len(OutputList)):
            outputbreak[0,int(OutputList[i].split(',')[0])] =OutputList[i].split(',')[1]
    print (outputbreak)

    with open('schedule.csv', 'w+') as myfile:
        wr = csv.writer(myfile, quoting=csv.QUOTE_ALL)
        for i in range(show):
            wr.writerow(outputnp[i,:] )

    with open('break.csv', 'w+') as myfile:
        wr = csv.writer(myfile, quoting=csv.QUOTE_ALL)
        wr.writerow(outputbreak)

    #print(OutputList)
except GurobiError:
    print('Error reported')